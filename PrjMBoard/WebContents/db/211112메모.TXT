소스
project : Web Page Setting : /
src : .java
 java
 servlet
 action = ActionFactory.getAction(cmd) <-- "?cmd=MENULIST"
	action : new MenuActionList() {}
	action.execute


WebContents
 .jsp (dynamic)
 .html/css/js/img/mp3(static 정적)
 출발점 : index.jsp
----------------------------------------------------------------
github 사용법 및 용어
1. 위치 확인 및 git 생성G@1004- MINGW64 /d/ysw_ws/jsp
$ git init
Initialized empty Git repository in D:/ysw_ws/jsp/.git/

2. 이메일 등록
$ git config --global user.email "doawishfor@naver.com"

3. 이름 등록
$ git config --global user.name "puchochiri"

4. 커밋에 추가할 파일 선택
$ git add README.txt

5. 커밋에 상세 설명 추가 및 커밋
$ git commit -m "사이트 설명 추가"
[master (root-commit) 4f63adb] 사이트 설명 추가
 1 file changed, 1 insertion(+)
 create mode 100644 README.txt

6. 수정한 파일 커밋에 추가
$ git add README.txt

7. 수정한 파일 커밋
$ git commit -m "설명 업데이트"
[master 04a1af5] 설명 업데이트
 1 file changed, 1 insertion(+), 1 deletion(-)

8. git log 확인
$ git log
commit 04a1af59d08e67d8d8b9a31c1f1b1b5434ac396f (HEAD -> master)
Author: puchochiri <doawishfor@naver.com>
Date:   Fri Nov 12 08:36:36 2021 +0900

    설명 업데이트

commit 4f63adb905f78756fcf17252100cd8df3fab4647
Author: puchochiri <doawishfor@naver.com>
Date:   Fri Nov 12 08:35:18 2021 +0900

    사이트 설명 추가
9. 원하는 git log로 돌아감
$ git checkout  4f63adb905
Note: switching to '4f63adb905'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 4f63adb 사이트 설명 추가

10. 최신 git log로 감
$ git checkout -
Previous HEAD position was 4f63adb 사이트 설명 추가
Switched to branch 'master'

11. 로컬저장소에 원격저장소 주소 알려줌
$ git remote add origin https://github.com/puchochiri/ysw_git.git

12. 로컬 저장소에 있는 커밋들을 push명령어로 원격저장소에 올림
$ git push origin master
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (6/6), 572 bytes | 572.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/puchochiri/ysw_git.git
 * [new branch]      master -> master


13. 다른 컴퓨터에 로컬저장소 만들기
& git clone https://github.com/puchochiri/ysw_git.git .
** 한칸뛰우고 마침표 할 것
다른

14. 커밋할 파일 선택
& git add README.txt

14. 커밋하기
& git commit -m"개발자 목록 추가"

15. 원격저장소에 푸시(올리기)
& git push origin master

16. 원격저장소에 새로운 커밋이 있다면 내 로컬저장소에 받아 오기
& git pull origin master

용어
1. Git : 깃 버전 관리 시스템
2. GitHub :  Git으로 관리하는 프로젝트를 올려둘 수 있는 사이트
3. GUI : 그래픽 유저 인터페이스, 즉 마우스로 클릭해서 사용하는 방식
4. CLI : 커맨드 라인 인터페이스, 즉 명령어를 하나씩 입력하는 방식
5. Git Bash : CLI 방식으로 Git을 사용할 수 있는 환경 입니다.
6. 커밋 : 버전 관리를 통해 생성된 파일, 혹은 그 행위를 의미합니다.
7. log 명령어 : 지금까지 만든 커밋을 모두 확인합니다.
8. 체크아웃한다. : checkout으로 원하는 지점으로 파일을 되돌릴 수 있습니다.
9. 로컬저장소 : Git으로 버전 관리하는 내 컴퓨터 안의 폴더를 의미합니다.
10. 원격저장소 : GitHub에서 협업하는 공간(폴더)를 의미합니다.
11. 레포지토리 : 원격저장소를 의미합니다.
12. 푸시 : 로컬저장소의 커밋(버전 관리한 파일)을 원격저장소에 올리는 것입니다.
13. 풀 : 원격저장소의 커밋을 로컬저장소에 내려 받는 것입니다.

CREATE TABLE MANAGE_TABLE(
    ID      NUMBER(8)       PRIMARY KEY,
    NAME    VARCHAR2(50)    NOT NULL,
    EMAIL   VARCHAR2(100)   UNIQUE,
    PHONE   VARCHAR2(30),
    INDATE  DATE,
    POINT   NUMBER(8)   DEFAULT 100
);

INSERT INTO MEM (MEMID, MEMNAME, EMAIL)
VALUES  ((select NVL(MAX(MEMID),0)+1 from MEM),'가은', 'KAEUN@NAVER.COM');

NUM
NAME
EMAIL
PHONE
INDATE
POINT


drop table client;
CREATE TABLE CLIENT (
    NUM     NUMBER(10)       PRIMARY KEY,
    NAME    VARCHAR2(50)    NOT NULL,
    EMAIL   VARCHAR2(100)   UNIQUE,
    PHONE   VARCHAR2(30),
    INDATE  DATE,
    POINT   NUMBER(8)   DEFAULT 1000
);

INSERT INTO CLIENT (NUM, NAME, EMAIL, PHONE, INDATE, POINT)
VALUES ((SELECT NVL(MAX(NUM),0) + 1 FROM CLIENT),'이순신','SUNSHIN@NAVER.COM','010-8888-8888','10/10/10',3000);
INSERT INTO CLIENT (NUM, NAME, EMAIL, PHONE, INDATE, POINT)
VALUES ((SELECT NVL(MAX(NUM),0) + 1 FROM CLIENT),'권율','KNON@NAVER.COM','010-8888-8888','10/10/10',3000);
INSERT INTO CLIENT (NUM, NAME, EMAIL, PHONE, INDATE, POINT)
VALUES ((SELECT NVL(MAX(NUM),0) + 1 FROM CLIENT),'김시민','KIM@NAVER.COM','010-8888-8888','10/10/10',3000);
INSERT INTO CLIENT (NUM, NAME, EMAIL, PHONE, INDATE, POINT)
VALUES ((SELECT NVL(MAX(NUM),0) + 1 FROM CLIENT),'황진','HWANG@NAVER.COM','010-8888-8888','10/10/10',3000);
INSERT INTO CLIENT (NUM, NAME, EMAIL, PHONE, INDATE, POINT)
VALUES ((SELECT NVL(MAX(NUM),0) + 1 FROM CLIENT),'사랑','SARANG@NAVER.COM','010-8888-8888','10/10/10',3000);
INSERT INTO CLIENT (NUM, NAME, EMAIL, PHONE, INDATE, POINT)
VALUES ((SELECT NVL(MAX(NUM),0) + 1 FROM CLIENT),'믿음','FAITH@NAVER.COM','010-8888-8888','10/10/10',3000);


commit;




4. 프로시저 사용시 소스 
create or replace PACKAGE PKG_CLIENT AS 
------------회원추가
PROCEDURE ADDCLIENT(
    NAME    IN  VARCHAR2,
    EMAIL   IN  VARCHAR2,
    TEL     IN  VARCHAR2,
    INDATE  IN  DATE,
    POINT   IN  NUMBER
);
-------------회원 수정기능
PROCEDURE UPDATECLIENT(
    IN_NUM      IN  NUMBER,
    IN_EMAIL    IN  VARCHAR2,
    IN_TEL      IN  VARCHAR2,
    IN_POINT    IN  NUMBER
);
-------------회원 삭제기능
PROCEDURE DELETECLIENT(
    IN_NUM  IN NUMBER
);
-------------회원 조회기능

PROCEDURE GETCLIENT(
    IN_NUM      IN  NUMBER,
    O_NUM       OUT NUMBER,
    O_NAME      OUT VARCHAR2,
    O_EMAIL     OUT  VARCHAR2,
    O_TEL       OUT  VARCHAR2,
    O_INDATE    OUT  VARCHAR2,
    O_GRADE    OUT  VARCHAR2
);
-------------회원목록조회
PROCEDURE GETCLIENTLIST(
    IN_NAME IN  VARCHAR2,
    O_CUR OUT SYS_REFCURSOR
    
);


END PKG_CLIENT;
=============================BODY====
CREATE OR REPLACE
PACKAGE BODY PKG_CLIENT AS
-------------------------------추가
  PROCEDURE ADDCLIENT(
    NAME    IN  VARCHAR2,
    EMAIL   IN  VARCHAR2,
    TEL     IN  VARCHAR2,
    INDATE  IN  DATE,
    POINT   IN  NUMBER
) AS
    V_NUM NUMBER(10);
  BEGIN
    SELECT NVL(MAX(NUM),0) + 1 
    INTO    V_NUM
    FROM CLIENT;
    
    INSERT INTO CLIENT(NUM,NAME,EMAIL,TEL,INDATE,POINT) 
    VALUES(V_NUM, NAME, EMAIL, TEL, INDATE, POINT);

    
  END ADDCLIENT;
------------------------------ 수정
  PROCEDURE UPDATECLIENT(
    IN_NUM      IN  NUMBER,
    IN_EMAIL    IN  VARCHAR2,
    IN_TEL      IN  VARCHAR2,
    IN_POINT    IN  NUMBER
) AS
  BEGIN
    UPDATE CLIENT
    SET EMAIL   = IN_EMAIL,
        TEL     = IN_TEL,
        POINT   = IN_POINT
    WHERE   NUM  =  IN_NUM;
    COMMIT;
    
    
  END UPDATECLIENT;
------------------------------ 삭제
  PROCEDURE DELETECLIENT(
    IN_NUM  IN NUMBER
) AS
  BEGIN
    DELETE FROM CLIENT
    WHERE   NUM = IN_NUM;
    COMMIT;
    
    
  END DELETECLIENT;
------------------------------ 조회
  PROCEDURE GETCLIENT(
    IN_NUM      IN  NUMBER,
    O_NUM       OUT NUMBER,
    O_NAME      OUT VARCHAR2,
    O_EMAIL     OUT  VARCHAR2,
    O_TEL       OUT  VARCHAR2,
    O_INDATE    OUT  VARCHAR2,
    O_GRADE    OUT  VARCHAR2
) AS
  BEGIN
  SELECT NUM, NAME, EMAIL, TEL, TO_CHAR(INDATE,'YYYY-MM-DD') INDATE,   
  CASE    WHEN POINT BETWEEN 1000 AND 2999 THEN '준회원'
            WHEN POINT BETWEEN 3000 AND 4999 THEN '일반회원'
            WHEN POINT BETWEEN 5000 AND 9999 THEN '우수회원'
            WHEN POINT >= 10000 THEN 'VIP'
        END AS GRADE
 INTO   O_NUM, O_NAME, O_EMAIL, O_TEL, O_INDATE, O_GRADE
        FROM CLIENT
        WHERE NUM = IN_NUM;

 EXCEPTION 
    WHEN NO_DATA_FOUND THEN
        O_NUM :=0;
        COMMIT;
        

  END GETCLIENT;

  PROCEDURE GETCLIENTLIST(
    IN_NAME IN  VARCHAR2,
    O_CUR OUT SYS_REFCURSOR

) AS
  BEGIN
    OPEN O_CUR FOR
        SELECT NAME, EMAIL, TEL, INDATE,
        CASE    WHEN POINT BETWEEN 1000 AND 2999 THEN '준회원'
                WHEN POINT BETWEEN 3000 AND 4999 THEN '일반회원'
                WHEN POINT BETWEEN 5000 AND 9999 THEN '우수회원'
                WHEN POINT >= 10000 THEN 'VIP'
            END AS GRADE
        FROM CLIENT
        WHERE NAME LIKE '%' ||IN_NAME|| '%';
  END GETCLIENTLIST;

END PKG_CLIENT;


    NAME    IN  VARCHAR2,
    EMAIL   IN  VARCHAR2,
    TEL     IN  VARCHAR2,
    INDATE  IN  DATE,
    POINT   IN  NUMBER
menulist
index --> MBoard(servlet) --> Action --> ActionFactory --> MenuActionList --> MenuDao --> menulist.jsp

메뉴추가
menulist.jsp-->MBoard(servlet) --> Action --> ActionFactory -->MenuActionWriteForm.java -->
menuwrite.jsp()--> MBoard(servlet)--> Action --> ActionFactory
-->MenuActionWrite.java --> MenuDao.java(menuInsert)

삭제
menulist.jsp-->MBoard(servlet) --> Action --> ActionFactory-->
MenuDelete.java--> MenuDao.java(menuDelete)

수정

menulist.jsp[<a href="/mboard?cmd=MENUUPDATEFORM&menu_id=${ menu.menu_id }">]-->MBoard(servlet) --> 
Action --> ActionFactory -->MenuActionUpdateForm.java -->
menuupdate.jsp()--> MBoard(servlet)--> Action --> ActionFactory
-->MenuActionUpdate.java --> MenuDao.java(menuUpdate)






MENU01	JAVA	2
MENU02	JSP	3
MENU03	HTML	1

	String menu_id = request.getParameter("menu_id");
		System.out.println("MenuActionUpdateForm:" + menu_id);



==============================================================================
create or replace PACKAGE PKG_MBOARD AS 

   PROCEDURE  PROC_MENU_LIST    ( O_CUR OUT SYS_REFCURSOR ); 
   PROCEDURE  PROC_MENU_INSERT  ( IN_MENU_NAME IN VARCHAR2 );
   PROCEDURE  PROC_MENU_DELETE  ( IN_MENU_NAME IN VARCHAR2 );                 

END PKG_MBOARD;
----------------------------------------------------------------------------------------

create or replace PACKAGE BODY PKG_MBOARD AS 

  PROCEDURE  PROC_MENU_LIST ( O_CUR OUT SYS_REFCURSOR ) AS
  BEGIN
     
     OPEN  O_CUR  FOR
       SELECT     MENU_ID, MENU_NAME, MENU_SEQ
        FROM      MENUS
        ORDER BY  MENU_SEQ ASC;
        
  END PROC_MENU_LIST;
---------------------------추가
  PROCEDURE  PROC_MENU_INSERT  ( IN_MENU_NAME IN VARCHAR2 ) 
  AS
    V_MENU_ID   VARCHAR2(6);
    V_MENU_SEQ  NUMBER(5, 0);
    
  BEGIN
    SELECT 'MENU' || 
    TRIM(TO_CHAR(TO_NUMBER(SUBSTR(NVL(MAX(MENU_ID),'MENU00'),5,2)) + 1, '00'))
    INTO V_MENU_ID
     FROM   MENUS;
    
    
    SELECT NVL(MAX(MENU_SEQ),0)+1 
    INTO V_MENU_SEQ
    FROM MENUS;
    
   
    INSERT INTO MENUS( MENU_ID, MENU_NAME, MENU_SEQ )
    VALUES ( V_MENU_ID, IN_MENU_NAME, V_MENU_SEQ  );
    

  END PROC_MENU_INSERT;
---------------------------------삭제
  PROCEDURE  PROC_MENU_DELETE  ( IN_MENU_NAME IN VARCHAR2 ) AS
  BEGIN
   
   DELETE
   FROM MENUS
   WHERE MENU_NAME = IN_MENU_NAME;
   COMMIT;
   
  END PROC_MENU_DELETE;

END PKG_MBOARD;
--=================================================================